[gd_scene load_steps=4 format=3 uid="uid://ckhnkw1inewst"]

[ext_resource type="Theme" uid="uid://jddhsc4auo55" path="res://addons/diisis/editor/visuals/theme/amber_cherryblossom.tres" id="1_d8oop"]
[ext_resource type="Texture2D" uid="uid://dgnvhhy7wch34" path="res://addons/diisis/editor/visuals/theme/buttons_ui/clipboard.png" id="3_0yrlq"]

[sub_resource type="GDScript" id="GDScript_7gi4q"]
script/source = "@tool
extends Control
class_name InstructionEditItem

var text_before_edit := \"\"

func set_changes_discardable(value:bool):
	find_child(\"DiscardButton\").visible = value

func get_visible_text():
	if find_child(\"InstructionLabel\").visible:
		return find_child(\"InstructionLabel\").text
	elif find_child(\"InstructionEdit\").visible:
		return find_child(\"InstructionEdit\").text

func get_raw_entered_text() -> String:
	return str(find_child(\"InstructionLabel\").text, find_child(\"InstructionEdit\").text)

func set_template(template:String):
	var args = Pages.instruction_templates.get(template, {}).get(\"args\", [])
	var arg_types = Pages.instruction_templates.get(template, {}).get(\"arg_types\", [])
	var arg_defaults = Pages.instruction_templates.get(template, {}).get(\"arg_defaults\", {})
	
	var display_string := \"\"
	display_string += template
	if not display_string.is_empty():
		display_string += \"(\"
	var i := 0
	while i < args.size():
		display_string += str(args[i], \":\", arg_types[i])
		var default = arg_defaults.get(args[i])
		if default != null:
			display_string += \"?\"
			display_string += default
		if i < args.size() - 1:
			display_string += \", \"
		i += 1
	if not display_string.is_empty():
		display_string += \")\"
	
	find_child(\"InstructionLabel\").text = display_string

func set_editing(value:bool):
	find_child(\"EditButton\").visible = not value
	find_child(\"InstructionLabel\").modulate.a = 0.6 if value else 1.0
	find_child(\"EditContainer\").visible = value
	if value:
		text_before_edit = find_child(\"InstructionLabel\").text
		find_child(\"SaveButton\").disabled = true
		find_child(\"InstructionEdit\").text = text_before_edit
		set_changes_discardable(not text_before_edit.is_empty())
	
		_on_instruction_edit_text_changed(text_before_edit)
	else:
		find_child(\"ComplianceLabel\").visible = false


func _on_save_button_pressed() -> void:
	save()

func save():
	var new_text : String = find_child(\"InstructionEdit\").text
	#Pages.add_template_from_string(new_text)
	
	var instruction_name := new_text.split(\"(\")[0]
	if not text_before_edit.is_empty():
		Pages.update_compliances(instruction_name)
	
	set_template(instruction_name)
	set_editing(false)


func _on_edit_button_pressed() -> void:
	set_editing(true)
	set_changes_discardable(text_before_edit != \"\")


func _on_discard_button_pressed() -> void:
	find_child(\"InstructionLabel\").text = text_before_edit
	set_editing(false)


func _on_instruction_edit_text_changed(new_text: String) -> void:
	var name_before_edit : String = text_before_edit.split(\"(\")[0]
	var entered_name : String = find_child(\"InstructionEdit\").text.split(\"(\")[0]
	var compliance := Pages.get_entered_instruction_compliance(new_text, true, name_before_edit != entered_name)
	
	find_child(\"SaveButton\").disabled = compliance != \"OK\"
	find_child(\"ComplianceLabel\").visible = compliance != \"OK\"
	find_child(\"ComplianceLabel\").text = compliance
	if compliance == \"OK\":
		self_modulate.v = 1.0
	else:
		self_modulate.v = 30.0

func _on_delete_button_pressed() -> void:
	queue_free()

func get_instruction_name() -> String:
	var label_text : String = find_child(\"InstructionLabel\").text
	if label_text.contains(\"(\"):
		return label_text.split(\"(\")[0]
	else:
		return label_text

func _on_copy_signature_to_clipboard_button_pressed() -> void:
	var signature : String = Pages.get_instruction_signature(get_instruction_name())
	if not signature.is_empty():
		DisplayServer.clipboard_set(signature)

func grab_focus():
	find_child(\"InstructionEdit\").grab_focus()


func _on_instruction_edit_text_submitted(new_text: String) -> void:
	if not find_child(\"SaveButton\").disabled:
		save()
"

[node name="PanelContainer" type="PanelContainer"]
offset_right = 1152.0
offset_bottom = 128.0
size_flags_horizontal = 3
size_flags_vertical = 3
focus_mode = 2
theme = ExtResource("1_d8oop")
script = SubResource("GDScript_7gi4q")

[node name="InstructionEditItem" type="VBoxContainer" parent="."]
layout_mode = 2

[node name="DisplayContainer" type="HBoxContainer" parent="InstructionEditItem"]
layout_mode = 2

[node name="DeleteButton" type="Button" parent="InstructionEditItem/DisplayContainer"]
layout_mode = 2
size_flags_horizontal = 0
tooltip_text = "Delete instruction"
text = "X"

[node name="InstructionLabel" type="Label" parent="InstructionEditItem/DisplayContainer"]
custom_minimum_size = Vector2(200, 0)
layout_mode = 2
size_flags_horizontal = 3
text = "Instruction_text"
clip_text = true
text_overrun_behavior = 3

[node name="CopySignatureToClipboardButton" type="Button" parent="InstructionEditItem/DisplayContainer"]
auto_translate_mode = 1
layout_mode = 2
size_flags_vertical = 0
tooltip_text = "Copy GDScript function signature to clipboard."
icon = ExtResource("3_0yrlq")

[node name="EditButton" type="Button" parent="InstructionEditItem/DisplayContainer"]
layout_mode = 2
text = "Edit"

[node name="EditContainer" type="HBoxContainer" parent="InstructionEditItem"]
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="InstructionEditItem/EditContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="InstructionEdit" type="LineEdit" parent="InstructionEditItem/EditContainer/VBoxContainer"]
auto_translate_mode = 1
clip_contents = true
custom_minimum_size = Vector2(300, 0)
layout_mode = 2
caret_blink = true

[node name="EditConfirmContainer" type="HBoxContainer" parent="InstructionEditItem/EditContainer/VBoxContainer"]
layout_mode = 2

[node name="DiscardButton" type="Button" parent="InstructionEditItem/EditContainer/VBoxContainer/EditConfirmContainer"]
layout_mode = 2
size_flags_horizontal = 2
text = "Discard Changes"

[node name="SaveButton" type="Button" parent="InstructionEditItem/EditContainer/VBoxContainer/EditConfirmContainer"]
auto_translate_mode = 1
layout_mode = 2
size_flags_horizontal = 10
text = "Save"

[node name="ComplianceLabel" type="Label" parent="InstructionEditItem"]
layout_mode = 2

[connection signal="pressed" from="InstructionEditItem/DisplayContainer/DeleteButton" to="." method="_on_delete_button_pressed"]
[connection signal="pressed" from="InstructionEditItem/DisplayContainer/CopySignatureToClipboardButton" to="." method="_on_copy_signature_to_clipboard_button_pressed"]
[connection signal="pressed" from="InstructionEditItem/DisplayContainer/EditButton" to="." method="_on_edit_button_pressed"]
[connection signal="text_changed" from="InstructionEditItem/EditContainer/VBoxContainer/InstructionEdit" to="." method="_on_instruction_edit_text_changed"]
[connection signal="text_submitted" from="InstructionEditItem/EditContainer/VBoxContainer/InstructionEdit" to="." method="_on_instruction_edit_text_submitted"]
[connection signal="pressed" from="InstructionEditItem/EditContainer/VBoxContainer/EditConfirmContainer/DiscardButton" to="." method="_on_discard_button_pressed"]
[connection signal="pressed" from="InstructionEditItem/EditContainer/VBoxContainer/EditConfirmContainer/SaveButton" to="." method="_on_save_button_pressed"]
